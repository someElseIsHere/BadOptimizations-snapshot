plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
    id "io.github.pacifistmc.forgix" version "1.2.7"
    id "me.modmuss50.mod-publish-plugin" version "0.5.0"
}

var jarName = "BadOptimizations-${rootProject.mod_version}-${rootProject.minecraft_version}.jar"

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered {
            it.mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
            it.mappings(rootProject.rootDir.toPath().resolve("1.21.tiny").toFile())
        }
        implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.2"))
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    forgix {
        group "me.thosea"
        outputDir "build/libs/merged"
        mergedJarName jarName
        tasks.build.finalizedBy mergeJars
    }
}

file("changelog.md").withInputStream {
    var str = new String(it.readAllBytes())
    while(str.endsWith("\n")) str = str.substring(0, str.length() - 1)
    publishMods.changelog = str
}

publishMods {
    file = file("build/libs/merged/${jarName}")
    displayName = "$rootProject.mod_version (1.21)"

    version = rootProject.mod_version
    type = STABLE
    modLoaders.add("fabric")
    //modLoaders.add("neoforge")

    modrinth {
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        projectId = "g96Z4WVZ"
        minecraftVersions.add("1.21")
    }

    curseforge {
        accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
        projectId = "949555"
        minecraftVersions.add("1.21")
        clientRequired = true
    }
}
